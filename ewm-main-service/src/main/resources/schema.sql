DROP TABLE IF EXISTS users, categories, events, requests, compilations, compilations_events;

CREATE TABLE users (
  user_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name varchar(250) NOT NULL,
  email varchar(254) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (user_id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE categories (
  category_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name varchar(50) NOT NULL,
  CONSTRAINT pk_category PRIMARY KEY (category_id),
  CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE events (
  event_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  annotation varchar(2000) NOT NULL,
  category_id integer NOT NULL,
  confirmed_requests integer,
  created_on TIMESTAMP NOT NULL,
  description varchar(7000) NOT NULL,
  event_date TIMESTAMP NOT NULL,
  initiator integer NOT NULL,
  lat FLOAT,
  lon FLOAT,
  paid boolean NOT NULL DEFAULT false,
  participant_limit integer NOT NULL DEFAULT 0,
  published_on TIMESTAMP,
  request_moderation boolean NOT NULL DEFAULT true,
  state varchar(15) NOT NULL CHECK (state IN ('PENDING', 'PUBLISHED', 'CANCELED')),
  title varchar(120),
  CONSTRAINT pk_events PRIMARY KEY (event_id),
  CONSTRAINT fk_event_initiator FOREIGN KEY (initiator) REFERENCES users (user_id) ON DELETE CASCADE,
  CONSTRAINT fk_event_category FOREIGN KEY (category_id) REFERENCES categories (category_id) ON DELETE CASCADE
);

CREATE TABLE requests (
  request_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  event_id integer NOT NULL,
  requester_id integer NOT NULL,
  created_on TIMESTAMP NOT NULL,
  state varchar(15) NOT NULL CHECK (state IN ('PENDING', 'CONFIRMED', 'CANCELED', 'REJECTED')),
  CONSTRAINT pk_requests PRIMARY KEY (request_id),
  CONSTRAINT fk_request_users FOREIGN KEY (requester_id) REFERENCES users (user_id) ON DELETE CASCADE,
  CONSTRAINT fk_request_event FOREIGN KEY (event_id) REFERENCES events (event_id) ON DELETE CASCADE
);

CREATE TABLE compilations (
  compilation_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  pinned boolean,
  title varchar(50) NOT NULL,
  CONSTRAINT pk_compilation PRIMARY KEY (compilation_id)
);

CREATE TABLE compilations_events (
  compilation_id BIGINT NOT NULL,
  event_id BIGINT NOT NULL,
  PRIMARY KEY (compilation_id, event_id),
  CONSTRAINT fk_compilation_events_compilation FOREIGN KEY (compilation_id) REFERENCES compilations(compilation_id) ON DELETE CASCADE,
  CONSTRAINT fk_compilation_events_event FOREIGN KEY (event_id) REFERENCES events(event_id) ON DELETE CASCADE
);